buildscript {
    repositories {
        jcenter()
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven { url = 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath 'com.peterabeles.gversion:com.peterabeles.gversion.gradle.plugin:1.5.0'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.peterabeles.gversion'

gversion {
    srcDir = "src/main/java/"
    classPackage = "wtf.moneymod.client"
    className = "GitInfo"
    timeZone = "Europe/Moscow"
    dateFormat = "dd/MM/yyyy HH:mm:ss"
}

//project.genSrgs.dependsOn(createVersionFile)
//roject.sourceApiJava.dependsOn(createVersionFile)

group = "wtf.moneymod"
archivesBaseName = "moneymod"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    mappings channel: "stable", version: "39-1.12"

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'wtf.moneymod.client.mixin.Loader'
            property 'mixin.env.disableRefMap', 'true' 
            
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        name = "minecraft"
        url "https://libraries.minecraft.net"
    }
    mavenCentral()
}

dependencies {
    minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2860"

    implementation("org.spongepowered:mixin:0.8.5") { // do NOT update this to 8.0 or above, it breaks compatibility with future client
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core' // we want to exclude this as well because 0.7.11 includes it too new for MC
    }
    implementation 'club.minnced:java-discord-rpc:2.0.2'
    implementation(group: 'org.reflections', name: 'reflections', version: '0.9.11') {
        exclude group: 'com.google.guava', module: 'guava'
    }
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('club.minnced:java-discord-rpc'))
        include(dependency('org.reflections:reflections'))
        include(dependency('org.javassist:javassist'))

    }
    manifest {
        attributes(
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                "FMLCorePlugin": 'wtf.moneymod.client.mixin.Loader',
                "TweakOrder": 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'ForceLoadAsMod': 'true',
                "MixinConfigs": 'mixins.moneymod.json',
        )
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
//    configurations = [project.configurations.implementation]
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.moneymod.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                "FMLCorePlugin": 'wtf.moneymod.client.mixin.Loader',
                "TweakOrder": 0,
                "MixinConfigs": 'mixins.moneymod.json',
        )
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task copyDeps(type: Copy) {
    from configurations.runtime
    into 'build/lib'
}

build.dependsOn(shadowJar)
